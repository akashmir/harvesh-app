# Ultra Crop Recommender API - Cloud Run Dockerfile
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV FLASK_APP=ultra_crop_recommender_production.py
ENV FLASK_ENV=production

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libgomp1 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies directly (no requirements file conflicts)
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir \
    Flask==2.3.3 \
    Flask-CORS==4.0.0 \
    Werkzeug==2.3.7 \
    numpy==1.24.3 \
    pandas==2.0.3 \
    scipy==1.11.1 \
    scikit-learn==1.3.0 \
    xgboost==1.7.6 \
    joblib==1.3.2 \
    SQLAlchemy==2.0.19 \
    Flask-SQLAlchemy==3.0.5 \
    requests==2.31.0 \
    urllib3==2.0.4 \
    python-dotenv==1.0.0 \
    structlog==23.1.0 \
    cryptography==41.0.3 \
    PyJWT==2.8.0 \
    gunicorn==21.2.0 \
    python-dateutil==2.8.2 \
    pytz==2023.3 \
    click==8.1.7 \
    itsdangerous==2.1.2 \
    Jinja2==3.1.2 \
    MarkupSafe==2.1.3

# Create models directory
RUN mkdir -p /app/models

# Copy application code
COPY . .

# Create non-root user
RUN useradd --create-home --shell /bin/bash app && \
    chown -R app:app /app
USER app

# Expose port
EXPOSE 5020

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5020/health || exit 1

# Run the application
CMD ["python", "ultra_crop_recommender_production.py"]
